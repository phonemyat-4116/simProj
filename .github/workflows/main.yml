name: A workflow for employee reports
on:
  push:
    branches:
      - main
      - develop
jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 20
        uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: temurin
      - name: Unit Tests
        run: mvn -Dtest=com.napier.sem.AppTest test
      - name: CodeCov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # now required for public repos
          directory: ./target/site/jacoco
          flags: Unit Tests # optional
          verbose: true # optional (default = false)

  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 20
        uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: temurin
      - name: Integration Tests
        run: |
          docker build -t database ./db 
          docker run --name employees -dp 33060:3306 database
          mvn -Dtest=com.napier.sem.AppIntegrationTest test
          docker stop employees
          docker rm employees
          docker image rm database
      - name: CodeCov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # now required for public repos too
          directory: ./target/site/jacoco
          flags: Integration Tests # optional
          verbose: true # optional (default = false)
          slug: phonemyat-4116/simProj
    

  build:
    name: Build and Start Using docker-compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 20
        uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: temurin
      - name: Package and Run docker compose
        run: |
          mvn package -DskipTests
          
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          
          docker-compose up --abort-on-container-exit
      - name: Create GitHub Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "latest"
          files: |
            ./target/*.jar
      - name: Copy Output
        run: docker container cp employees_app:./tmp/reports ./
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: reports # The branch the action should deploy to.
          folder: reports # The folder we are copying


#      - name: Build with Maven
#        run: mvn package -DskipTests
#      - name: Install Docker Compose
#        run: >
#          sudo curl -L
#          "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname
#          -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#
#          sudo chmod +x /usr/local/bin/docker-compose
#
#          docker-compose --version
#      - name: Run docker compose
#        run: docker-compose up --abort-on-container-exit --exit-code-from app

